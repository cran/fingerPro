// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

// unmixing_corrected_gof1
Rcpp::DataFrame unmixing_corrected_gof1(SEXP sources, SEXP samples, int trials, int iter, int seed);
RcppExport SEXP _fingerPro_unmixing_corrected_gof1(SEXP sourcesSEXP, SEXP samplesSEXP, SEXP trialsSEXP, SEXP iterSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type sources(sourcesSEXP);
    Rcpp::traits::input_parameter< SEXP >::type samples(samplesSEXP);
    Rcpp::traits::input_parameter< int >::type trials(trialsSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(unmixing_corrected_gof1(sources, samples, trials, iter, seed));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fingerPro_unmixing_corrected_gof1", (DL_FUNC) &_fingerPro_unmixing_corrected_gof1, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_fingerPro(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
